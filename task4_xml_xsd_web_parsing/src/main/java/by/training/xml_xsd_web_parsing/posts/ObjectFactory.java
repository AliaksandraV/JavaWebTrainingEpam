//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.08.26 at 12:39:30 PM MSK 
//


package by.training.xml_xsd_web_parsing.posts;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the by.training.epam.posts package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Advertising_QNAME = new QName("http://www.epam.training.by/posts", "advertising");
    private final static QName _Ordinary_QNAME = new QName("http://www.epam.training.by/posts", "ordinary");
    private final static QName _Type_QNAME = new QName("http://www.epam.training.by/posts", "type");
    private final static QName _Congratulation_QNAME = new QName("http://www.epam.training.by/posts", "congratulation");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: by.training.epam.posts
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Congratulation }
     * 
     */
    public Congratulation createCongratulation() {
        return new Congratulation();
    }

    /**
     * Create an instance of {@link Type }
     * 
     */
    public Type createType() {
        return new Type();
    }

    /**
     * Create an instance of {@link Ordinary }
     * 
     */
    public Ordinary createOrdinary() {
        return new Ordinary();
    }

    /**
     * Create an instance of {@link Advertising }
     * 
     */
    public Advertising createAdvertising() {
        return new Advertising();
    }

    /**
     * Create an instance of {@link Posts }
     * 
     */
    public Posts createPosts() {
        return new Posts();
    }

    /**
     * Create an instance of {@link Post }
     * 
     */
    public Post createPost() {
        return new Post();
    }

    /**
     * Create an instance of {@link Address }
     * 
     */
    public Address createAddress() {
        return new Address();
    }

    /**
     * Create an instance of {@link ArtistList }
     * 
     */
    public ArtistList createArtistList() {
        return new ArtistList();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Advertising }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.epam.training.by/posts", name = "advertising", substitutionHeadNamespace = "http://www.epam.training.by/posts", substitutionHeadName = "type")
    public JAXBElement<Advertising> createAdvertising(Advertising value) {
        return new JAXBElement<Advertising>(_Advertising_QNAME, Advertising.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Ordinary }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.epam.training.by/posts", name = "ordinary", substitutionHeadNamespace = "http://www.epam.training.by/posts", substitutionHeadName = "type")
    public JAXBElement<Ordinary> createOrdinary(Ordinary value) {
        return new JAXBElement<Ordinary>(_Ordinary_QNAME, Ordinary.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Type }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.epam.training.by/posts", name = "type")
    public JAXBElement<Type> createType(Type value) {
        return new JAXBElement<Type>(_Type_QNAME, Type.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Congratulation }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.epam.training.by/posts", name = "congratulation", substitutionHeadNamespace = "http://www.epam.training.by/posts", substitutionHeadName = "type")
    public JAXBElement<Congratulation> createCongratulation(Congratulation value) {
        return new JAXBElement<Congratulation>(_Congratulation_QNAME, Congratulation.class, null, value);
    }

}
